#!/usr/bin/env python

from gradelib import *

r = Runner()

@test(10, "thread package with public testcase part1-0")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part1-0',
    ]))
    r.match(
    'mp1-part1-0',
    'thread 1: 100',
	'thread 2: 0',
	'thread 3: 10000',
	'thread 1: 101',
	'thread 2: 1',
	'thread 3: 10001',
	'thread 1: 102',
	'thread 2: 2',
	'thread 3: 10002',
	'thread 1: 103',
	'thread 2: 3',
	'thread 3: 10003',
	'thread 1: 104',
	'thread 2: 4',
	'thread 3: 10004',
	'thread 1: 105',
	'thread 2: 5',
	'thread 1: 106',
	'thread 2: 6',
	'thread 1: 107',
	'thread 2: 7',
	'thread 1: 108',
	'thread 2: 8',
	'thread 1: 109',
	'thread 2: 9',
	'',
	'exited'
    )

@test(10, "thread package with public testcase part1-1")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part1-1',
    ]))
    r.match(
    'mp1-part1-1',
    'thread 1: 100',
	'thread 2: 0',
	'thread 3: 10000',
	'thread 1: 101',
	'thread 2: 1',
	'thread 4: 1000',
	'thread 5: 10',
	'thread 3: 10001',
	'thread 1: 102',
	'thread 2: 2',
	'thread 4: 1001',
	'thread 5: 11',
	'thread 3: 10002',
	'thread 1: 103',
	'thread 2: 3',
	'thread 4: 1002',
	'thread 5: 12',
	'thread 1: 104',
	'thread 2: 4',
	'thread 4: 1003',
	'thread 5: 13',
	'thread 2: 5',
	'thread 4: 1004',
	'thread 5: 14',
	'thread 2: 6',
	'thread 4: 1005',
	'thread 5: 15',
	'thread 2: 7',
	'thread 4: 1006',
	'thread 5: 16',
	'thread 2: 8',
	'thread 4: 1007',
	'thread 4: 1008',
	'',
	'exited'
    )

@test(10, "thread package with public testcase part1-2")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part1-2',
    ]))
    r.match(
    'mp1-part1-2',
    'thread 1: 0',
    'thread 2: 0',
    'thread 3: 0',
    'thread 1: 1',
    'thread 4: 0',
    'thread 5: 0',
    'thread 2: 1',
    'thread 6: 0',
    'thread 7: 0',
    'thread 3: 1',
    'thread 1: 2',
    'thread 8: 0',
    'thread 9: 0',
    'thread 4: 1',
    'thread 10: 0',
    'thread 11: 0',
    'thread 5: 1',
    'thread 2: 2',
    'thread 12: 0',
    'thread 13: 0',
    'thread 6: 1',
    'thread 14: 0',
    'thread 15: 0',
    'thread 7: 1',
    'thread 3: 2',
    'thread 8: 1',
    'thread 9: 1',
    'thread 4: 2',
    'thread 10: 1',
    'thread 11: 1',
    'thread 5: 2',
    'thread 2: 3',
    'thread 12: 1',
    'thread 13: 1',
    'thread 6: 2',
    'thread 14: 1',
    'thread 15: 1',
    'thread 7: 2',
    'thread 3: 3',
    'thread 8: 2',
    'thread 9: 2',
    'thread 4: 3',
    'thread 10: 2',
    'thread 11: 2',
    'thread 5: 3',
    'thread 12: 2',
    'thread 13: 2',
    'thread 6: 3',
    'thread 14: 2',
    'thread 15: 2',
    'thread 7: 3',
    'thread 3: 4',
    'thread 8: 3',
    'thread 9: 3',
    'thread 4: 4',
    'thread 10: 3',
    'thread 11: 3',
    'thread 5: 4',
    'thread 12: 3',
    'thread 13: 3',
    'thread 6: 4',
    'thread 14: 3',
    'thread 15: 3',
    'thread 7: 4',
    'thread 8: 4',
    'thread 9: 4',
    'thread 4: 5',
    'thread 10: 4',
    'thread 11: 4',
    'thread 5: 5',
    'thread 12: 4',
    'thread 13: 4',
    'thread 6: 5',
    'thread 14: 4',
    'thread 15: 4',
    'thread 7: 5',
    'thread 8: 5',
    'thread 9: 5',
    'thread 10: 5',
    'thread 11: 5',
    'thread 5: 6',
    'thread 12: 5',
    'thread 13: 5',
    'thread 6: 6',
    'thread 14: 5',
    'thread 15: 5',
    'thread 7: 6',
    'thread 8: 6',
    'thread 9: 6',
    'thread 10: 6',
    'thread 11: 6',
    'thread 12: 6',
    'thread 13: 6',
    'thread 6: 7',
    'thread 14: 6',
    'thread 15: 6',
    'thread 7: 7',
    'thread 8: 7',
    'thread 9: 7',
    'thread 10: 7',
    'thread 11: 7',
    'thread 12: 7',
    'thread 13: 7',
    'thread 14: 7',
    'thread 15: 7',
    'thread 7: 8',
    'thread 8: 8',
    'thread 9: 8',
    'thread 10: 8',
    'thread 11: 8',
    'thread 12: 8',
    'thread 13: 8',
    'thread 14: 8',
    'thread 15: 8',
    'thread 8: 9',
    'thread 9: 9',
    'thread 10: 9',
    'thread 11: 9',
    'thread 12: 9',
    'thread 13: 9',
    'thread 14: 9',
    'thread 15: 9',
    'thread 9: 10',
    'thread 10: 10',
    'thread 11: 10',
    'thread 12: 10',
    'thread 13: 10',
    'thread 14: 10',
    'thread 15: 10',
    'thread 10: 11',
    'thread 11: 11',
    'thread 12: 11',
    'thread 13: 11',
    'thread 14: 11',
    'thread 15: 11',
    'thread 11: 12',
    'thread 12: 12',
    'thread 13: 12',
    'thread 14: 12',
    'thread 15: 12',
    'thread 12: 13',
    'thread 13: 13',
    'thread 14: 13',
    'thread 15: 13',
    'thread 13: 14',
    'thread 14: 14',
    'thread 15: 14',
    'thread 14: 15',
    'thread 15: 15',
    'thread 15: 16',
	'',
	'exited'
    )

@test(10, "thread package with public testcase part1-3")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part1-3',
    ]))
    r.match(
    'mp1-part1-3',
    'thread 1: 0',
    'thread 2: 0',
    'thread 3: 0',
    'thread 4: 0',
	'thread 5: 0',
	'thread 2: 1',
	'thread 6: 0',
	'thread 7: 0',
	'thread 3: 1',
	'thread 8: 0',
	'thread 9: 0',
	'thread 4: 1',
	'thread 10: 0',
	'thread 11: 0',
	'thread 5: 1',
	'thread 12: 0',
	'thread 13: 0',
	'thread 6: 1',
	'thread 14: 0',
	'thread 15: 0',
	'thread 7: 1',
	'thread 3: 2',
	'thread 8: 1',
	'thread 9: 1',
	'thread 4: 2',
	'thread 10: 1',
	'thread 11: 1',
	'thread 5: 2',
	'thread 12: 1',
	'thread 13: 1',
	'thread 6: 2',
	'thread 14: 1',
	'thread 15: 1',
	'thread 7: 2',
	'thread 8: 2',
	'thread 9: 2',
	'thread 4: 3',
	'thread 10: 2',
	'thread 11: 2',
	'thread 5: 3',
	'thread 12: 2',
	'thread 13: 2',
	'thread 6: 3',
	'thread 14: 2',
	'thread 15: 2',
	'thread 7: 3',
	'thread 8: 3',
	'thread 9: 3',
	'thread 10: 3',
	'thread 11: 3',
	'thread 5: 4',
	'thread 12: 3',
	'thread 13: 3',
	'thread 6: 4',
	'thread 14: 3',
	'thread 15: 3',
	'thread 7: 4',
	'thread 8: 4',
	'thread 9: 4',
	'thread 10: 4',
	'thread 11: 4',
	'thread 12: 4',
	'thread 13: 4',
	'thread 6: 5',
	'thread 14: 4',
	'thread 15: 4',
	'thread 7: 5',
	'thread 8: 5',
	'thread 9: 5',
	'thread 10: 5',
	'thread 11: 5',
	'thread 12: 5',
	'thread 13: 5',
	'thread 14: 5',
	'thread 15: 5',
	'thread 7: 6',
	'thread 8: 6',
	'thread 9: 6',
	'thread 10: 6',
	'thread 11: 6',
	'thread 12: 6',
	'thread 13: 6',
	'thread 14: 6',
	'thread 15: 6',
	'thread 8: 7',
	'thread 9: 7',
	'thread 10: 7',
	'thread 11: 7',
	'thread 12: 7',
	'thread 13: 7',
	'thread 14: 7',
	'thread 15: 7',
	'thread 9: 8',
	'thread 10: 8',
	'thread 11: 8',
	'thread 12: 8',
	'thread 13: 8',
	'thread 14: 8',
	'thread 15: 8',
	'thread 10: 9',
	'thread 11: 9',
	'thread 12: 9',
	'thread 13: 9',
	'thread 14: 9',
	'thread 15: 9',
	'thread 11: 10',
	'thread 12: 10',
	'thread 13: 10',
	'thread 14: 10',
	'thread 15: 10',
	'thread 12: 11',
	'thread 13: 11',
	'thread 14: 11',
	'thread 15: 11',
	'thread 13: 12',
	'thread 14: 12',
	'thread 15: 12',
	'thread 14: 13',
	'thread 15: 13',
	'thread 15: 14',
	'',
	'exited'
    )




@test(10, "thread package with public testcase part2-0")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part2-0',
    ]))
    r.match(
        'mp1-part2-0',
        'thread 1: 100',
        'handler 3: 20',
        'thread 1: 101',
        'handler 3: 22',
        'thread 1: 102',
        'handler 3: 24',
        'thread 3: 10000',
        'thread 1: 103',
        'thread 1: suspending',
        'thread 3: 10001',
        'thread 3: 10002',
        'thread 3: 10003',
        'thread 3: 10004',
        'thread 3: 10005',
        'thread 1: resuming',
        'thread 1: 104',
        'thread 1: 105',
        '',
        'exited',
    )

@test(10, "thread package with public testcase part2-1")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part2-1',
    ]))
    r.match(
        'mp1-part2-1',
        'thread 1: 100',
        'thread 2: 0',
        'thread 3: 10000',
        'thread 1: 101',
        'handler 2: 1',
        'thread 2: 1',
        'thread 3: 10001',
        'thread 1: 102',
        'thread 2: 2',
        'thread 3: 10002',
        'thread 1: 103',
        'thread 2: 3',
        'thread 3: 10003',
        'thread 1: 104',
        'thread 2: 4',
        'thread 2: suspending',
        'handler 3: 21',
        'thread 1: 105',
        'handler 3: 23',
        'thread 1: 106',
        'handler 3: 25',
        'thread 1: 107',
        'handler 3: 27',
        'thread 1: 108',
        'handler 3: 29',
        'thread 3: 10004',
        'thread 1: 109',
        'thread 2: resuming',
        'thread 2: 5',
        'thread 2: 6',
        'thread 2: 7',
        'thread 2: 8',
        'thread 2: 9',
        '',
        'exited',
    )

@test(10, "thread package with public testcase part2-2")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part2-2',
    ]))
    r.match(
        'mp1-part2-2',
        'thread 1: 100',
        'thread 2: 0',
        'thread 3: 10000',
        'thread 1: 101',
        'handler 3: 20',
        'thread 3: 10001',
        'thread 1: 102',
        'handler 3: 22',
        'thread 3: 10002',
        'thread 1: 103',
        'handler 3: 24',
        'thread 3: 10003',
        'thread 1: 104',
        'handler 3: 26',
        'handler 3: 21',
        'thread 1: 105',
        'handler 3: 28',
        'thread 2: 1',
        'handler 3: 23',
        'thread 1: 106',
        'thread 2: 2',
        'handler 3: 25',
        'thread 1: 107',
        'thread 2: 3',
        'handler 3: 27',
        'thread 1: 108',
        'thread 2: 4',
        'thread 2: suspending',
        'handler 3: 29',
        'thread 3: 10004',
        'thread 1: 109',
        'thread 2: resuming',
        'thread 2: 5',
        'thread 2: 6',
        'thread 2: 7',
        'thread 2: 8',
        'thread 2: 9',
        '',
        'exited',
    )

@test(10, "thread package with public testcase part3-0")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part3-0',
    ]))
    r.match(
        'mp1-part3-0',
        "Let's do some matrix multiplications",
        '------------------',
        "Firstly, let's multiply the two matrices.",
        '------------------',
        'Matrix 1',
        '1 2 3 ',
        '4 5 6 ',
        '7 8 9 ',
        'Matrix 2',
        '1 0 0 ',
        '0 1 0 ',
        '0 0 1 ',
        '------------------',
        'The outcome',
        '1 2 3 ',
        '4 5 6 ',
        '7 8 9 ',
        '------------------',
        'Current ready queue: 1 ',
        '------------------',
        "Secondly, let's multiply the two matrices.",
        '------------------',
        'Matrix 2',
        '1 2 3 4 5 ',
        '1 2 3 4 5 ',
        'Matrix 2',
        '1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 ',
        '1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 ',
        '1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 ',
        '1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 ',
        '1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 ',
        'The outcome',
        '15 0 15 0 15 0 15 0 15 0 15 15 15 15 15 0 0 0 0 0 ',
        '15 0 15 0 15 0 15 0 15 0 15 15 15 15 15 0 0 0 0 0 ',
        '------------------',
        'Current ready queue: 1 ',
        '',
        'exited',
        
    )

@test(10, "thread package with public testcase part3-1")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part3-1',
    ]))
    r.match(
        'mp1-part3-1',
        '================    TASK1    ================',
        '',
        'The thread 2 received signal 0 before running, Correct.',
        'The thread 3 received signal 1 before running, Correct.',
        'Now there is 1 thread in the ready queue',
        '',
        '================ End Of Task1 ================',
        '',
        '================    TASK2    ================',
        '',
        "The thread 4's stack frame was taken care successfully, Correct.",
        'Now there is 1 thread in the ready queue',
        '',
        '================ End Of Task2 ================',
        '',
        '================    TASK3    ================',
        '',
        'The first round (should be even number range from 1-30): 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 ',
        'The second round (should be all number range from 1-30): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ',
        'The third round (should be odd number range from 1-30): 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 ',
        'Now there is 16 thread in the ready queue (should be 15+1=16)',
        'The fourth round (should be even number range from 1-30): 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 ',
        'Now there is 1 thread in the ready queue',
        '',
        '================ End Of Task3 ================',
        '',
        '================    TASK4    ================',
        '',
        'Tt-0: 1, Tt-1: 1, Tt-2: 1, Tt-0: 2, Tt-1: 2, Tt-2: 2 ',
        'Tt-0: 3, Tt-1: 3, Tt-2: 3, Tt-0: 4, Tt-1: 4, Tt-2: 4 ',
        'Tt-0: 5, Tt-1: 5, Tt-2: 5, Tt-0: 6, Ts-1: 1, Tt-2: 6 ',
        'Tt-0: 7, Ts-1: 2, Tt-2: 7, Tt-0: 8, Ts-1: 3, Tt-2: 8 ',
        'Tt-0: 9, Ts-1: 4, Tt-2: 9, Tt-0: 10, Ts-1: 5, Tt-2: 10 ',
        'Tt-0: 11, Ts-1: 6, Tt-2: 11, Tt-0: 12, Ts-1: 7, Tt-2: 12 ',
        'Tt-0: 13, Ts-1: 8, Tt-2: 13, Tt-0: 14, Ts-1: 9, Tt-2: 14 ',
        'Tt-0: 15, Ts-1: 10, Tt-2: 15, Tt-0: 16, Ts-1: 11, Tt-2: 16 ',
        'Tt-0: 17, Ts-1: 12, Tt-2: 17, Tt-0: 18, Ts-1: 13, Tt-2: 18 ',
        'Tt-0: 19, Ts-1: 14, Tt-2: 19, Tt-0: 20, Ts-1: 15, Tt-2: 20 ',
        'Tt-0: 21, Tt-1: 6, Tt-2: 21, Tt-0: 22, Tt-1: 7, Tt-2: 22 ',
        'Tt-0: 23, Tt-1: 8, Tt-2: 23, Tt-0: 24, Tt-1: 9, Tt-2: 24 ',
        'Tt-0: 25, Tt-1: 10, Tt-2: 25, Tt-0: 26, Tt-1: 11, Tt-2: 26 ',
        'Tt-0: 27, Tt-1: 12, Tt-2: 27, Tt-0: 28, Tt-1: 13, Tt-2: 28 ',
        'Tt-0: 29, Tt-1: 14, Tt-2: 29, Tt-0: 30, Tt-1: 15, Tt-2: 30 ',
        'Thread 36 receive signo 1 and kill itself',
        'Now there is 1 thread in the ready queue',
        '',
        '================ End Of Task4 ================',
        '',
        '================    TASKe    ================',
        '',
        "Azukashine... t0 stack is starting from 0x0000000000012520",
        "The fun fun environment is set",
        "The fun fun thread clean the memory starting from 0x0000000000012520",
        "You used correct stack to handle the signals, Correct",
        "Now there is 1 thread in the ready queue",
        "You're still alive, hurray",
        '',
        '================ End Of Taske ================',
        '',
        'exited',
    )

@test(10, "thread package with public testcase part3-2")
def test_thread_0():
    r.run_qemu(shell_script([
        'mp1-part3-2',
    ]))
    r.match(
        'mp1-part3-2',
        '1st t_thead stack: 0x00000000000103A0',
        'The w_thread signal handler\'s base pointer: 0x0000000000011500',
        '2nd t_thread stack: 0x00000000000103A0',
        'The memory 0x0000000000010B80 <-> 0x0000000000010540 is used by corrupt function ',
        "I'm still alive",
        '',
        'exited',
    )


run_tests()